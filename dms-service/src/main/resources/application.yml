spring:
  application.name: @project.artifactId@
  banner.location: banner.txt
  cloud:
    stream:
      default:
        consumer:
          max-attempts: 3
      kafka:
        binder:
          auto-create-topics: false
          producerProperties:
            value:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
            key:
              serializer: org.springframework.kafka.support.serializer.JsonSerializer
          consumerProperties:
            auto:
              offset:
                reset: latest
            key:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            value:
              deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  kafka:
    consumer:
      properties:
        spring:
          json:
            trusted:
              packages: '*'

server:
  shutdown: "graceful"
  port: 8080
  error:
    include-exception: false
    include-stacktrace: never
    whitelabel:
      enabled: false

# Config for spring actuator endpoints
management:
  server.port: ${server.port}
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health, info, prometheus
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true
    info.enabled: true
    prometheus.enabled: true
  info:
    env:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

info:
  application:
    name: @project.artifactId@
    version: @project.version@
    description: @project.description@
  build:
    java.version: @java.version@
    spring-cloud.version: @spring-cloud-dependencies.version@